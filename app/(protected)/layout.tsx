import { authOptions } from "@/lib/auth";
import { Metadata } from "next";
import { getServerSession } from "next-auth";
import { redirect } from "next/navigation";

import { Button } from "@/components/ui/button";
import {
  NavigationMenu,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
} from "@/components/ui/navigation-menu";
import { cn } from "@/lib/utils";
import { roboto } from "../_fonts";

import "@/app/globals.css";
import { HomeIcon, SettingsIcon, UserIcon } from "lucide-react";
import Link from "next/link";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function ProtectedLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);

  if (!session) {
    redirect("/auth/signin");
  }

  return (
    <html lang="en">
      <body className={cn(`${roboto.variable} antialiased`, roboto.className)}>
        <Header />
        <main className="container mx-auto max-w-7xl py-6">{children}</main>
      </body>
    </html>
  );
}

const items = [
  {
    label: "Feed",
    href: "/feed",
    icon: HomeIcon,
  },
  {
    label: "Settings",
    href: "/settings",
    icon: SettingsIcon,
  },
  {
    label: "Profile",
    href: "/profile",
    icon: UserIcon,
  },
];

export const Header = () => {
  return (
    <header className="sticky top-0 w-full border-b border-gray-500/30">
      <div className="container mx-auto max-w-7xl flex h-16 items-center justify-between">
        <div className="text-xl font-bold bg-gray-900 text-white w-8 h-8 rounded-full flex items-center justify-center">
          S
        </div>
        <NavigationMenu viewport={false}>
          <NavigationMenuList>
            {items.map(({ label, href, icon: Icon }) => (
              <NavigationMenuItem key={label}>
                <NavigationMenuLink asChild>
                  <Link href={href}>
                    <Icon
                      strokeWidth={2}
                      className="text-gray-900 size-5 hover:text-black"
                    />
                  </Link>
                </NavigationMenuLink>
              </NavigationMenuItem>
            ))}
          </NavigationMenuList>
        </NavigationMenu>
        <Button variant="destructive" size="sm" className="md:hidden p-2">
          Log Out
        </Button>
      </div>
    </header>
  );
};
